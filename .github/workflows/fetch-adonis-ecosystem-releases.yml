name: Fetch AdonisJS Releases

on:
  schedule:
    - cron: '*/1 * * * *' # setiap 1 menit
    # - cron: '0 0 * * *' # setiap hari jam 00:00 UTC
  workflow_dispatch:

jobs:
  fetch_releases:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Restore cache antrian release
        id: cache
        uses: actions/cache@v4
        with:
          path: .github/cache/release-queue.json
          key: release-queue-cache

      - name: Ambil release terbaru dan simpan ke antrian
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = '.github/cache/release-queue.json';
            const repos = [
              'adonisjs/lucid',
              'adonisjs/presets',
              'adonisjs/auth',
              'adonisjs/ace',
              'adonisjs/health',
              'adonisjs/core',
              'adonisjs/eslint-plugin-adonisjs',
              'adonisjs/create-adonisjs',
              'adonisjs/cache',
              'adonisjs/lock',
              'adonisjs/redis',
              'adonisjs/mail',
              'adonisjs/session',
              'adonisjs/limiter',
              'adonisjs/transmit',
              'adonisjs/i18n',
              'adonisjs/drive',
              'adonisjs/eslint-config',
              'adonisjs/tsconfig',
              'adonisjs/prettier-config',
              'adonisjs/assembler',
              'adonisjs/hash',
              'japa/create-japa',
              'adonisjs/inertia',
              'japa/snapshot',
              'adonisjs/http-server',
              'adonisjs/bouncer',
              'adonisjs/logger',
              'japa/api-client',
              'adonisjs/fold',
              'vinejs/compiler',
              'vinejs/vine',
              'adonisjs/vite'
            ];
            
            let queue = [];
            if (fs.existsSync(path)) {
              try {
                queue = JSON.parse(fs.readFileSync(path, 'utf-8'));
              } catch {}

            }

            for (const repo of repos) {
              const [owner, repoName] = repo.split('/');
              try {
                const release = await github.rest.repos.getLatestRelease({ owner, repo: repoName });
                const latestTag = release.data.tag_name;
                if (!queue.find(q => q.repo === repo && q.tag === latestTag)) {
                  queue.push({ repo, tag: latestTag, url: release.data.html_url });
                  console.log(`Ditambahkan ke antrian: ${repo} - ${latestTag}`);
                }
              } catch (err) {
                console.log(`Gagal ambil release ${repo}:`, err.message);
              }
            }

            fs.mkdirSync('.github/cache', { recursive: true });
            fs.writeFileSync(path, JSON.stringify(queue, null, 2));
          
      - name: Save cache antrian release
        uses: actions/cache@v4
        with:
          path: .github/cache/release-queue.json
          key: release-queue-cache
